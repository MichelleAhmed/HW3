# This file is app/controllers/movies_controller.rb
class MoviesController < ApplicationController
  def initialize
	@all_ratings = Movie.all_ratings
	super  
  end
  def index
    #@mall_ratings = Movie.all_ratings
    if params[:sort]
    	@sorts = params[:sort]
    	session[:sort] = @sorts
	if(@sorts == "release_date")
		@release_date_header = "hilite"
	elsif(@sorts == "title")
		@title_header = "hilite"
	end
    elsif session[:sort] && @sorts
		flash.keep
		redirect_to params.merge(:sort => session[:sort])	
    end
    
    @rate = params[:ratings]
	if @rate
		@rate_hash = @rate
		@rate_array = @rate.keys
		session[:ratings] = @rate_hash
	elsif session[:ratings] 
		flash.keep
		redirect_to params.merge(:ratings => session[:ratings])
	  else
		@rate_hash = {}
		@r_array = @all_ratings
      	  end
		@movies = Movie.find_all_by_rating(@rate_array, :order => session[:sort])
  end
		
  def show
    id = params[:id] # retrieve movie ID from URI route
    @movie = Movie.find(id) # Look up movie by unique ID
    # will render app/views/movies/show.<extension> by default
  end

  def new
    # default: render 'new' template
  end

  def create
    @movie = Movie.create!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully created."
    redirect_to movies_path
  end

  def edit
    @movie = Movie.find params[:id]
  end

  def update
    @movie = Movie.find params[:id]
    @movie.update_attributes!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully updated."
    redirect_to movie_path(@movie)
  end

  def destroy
    @movie = Movie.find(params[:id])
    @movie.destroy
    flash[:notice] = "Movie '#{@movie.title}' deleted."
    redirect_to movies_path
  end

end
